@model ResortManagement.Areas.Dashboard.Models.AccommodationsEditViewModel
@{ 
    var urlDefault = "/content/images/WebPictures/";

}


@if (Model != null)
{

    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalCenterTitle">
            @if (Model.accommodation != null)
            {
                <span>Edit Accommodation</span>
            }
            else
            {
                <span>Create Accommodation</span>
            }

        </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <form id="formAction">
            <input type="hidden" name="ID" value="@(Model.accommodation!=null?Model.accommodation.ID.ToString():string.Empty)">
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Name</span>
                </div>
                <input class="form-control" name="Name" type="text" placeholder="" value="@(Model.accommodation!=null?Model.accommodation.Name:string.Empty)">
            </div>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Gadget</span>
                </div>

                <select name="AccommodationGatgetID" class="form-control font-weight-bold pr-3">
                    <option value="" disabled selected>Select Gadget</option>
                    @if (Model.accommodationGatgets != null)
                    {
                        foreach (var accommodationadget in Model.accommodationGatgets)
                        {

                            <option value="@accommodationadget.ID" @(Model.accommodation != null ? Model.accommodation.AccommodationGatgetID == accommodationadget.ID ? "class='font-weight-bold' " + "selected" : string.Empty : string.Empty)>@accommodationadget.Name</option>


                        }
                    }
                </select>

            </div>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Description</span>
                </div>
                <textarea class="form-control" name="Description" rows="5" cols="10" placeholder="">@(Model.accommodation != null ? Model.accommodation.Description:string.Empty)</textarea>
            </div>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Picture</span>
                </div>
                <div class="custom-file">
                    <input id="inputGroupFile01" type="file" accept="image/*" class="custom-file-input" multiple />
                    <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                </div>
            </div>
            <input type="hidden" name="imgUrls" value="" />
            <div id="ImgContainer" class="d-flex flex-wrap justify-content-around mb-2">
                <!--Clone div-->
                <div onclick="Remove(this)" class="d-none justify-content-center align-content-center m-1 w-25">
                    <img src="" title="Click To Remove" class="img-thumbnail">
                    <div class="position-absolute align-self-center overlay">
                        <span class="text font-weight-bold">X</span>
                    </div>
                </div>
                <!--End Clone div-->
                @if (Model.Pictures != null)
                {
                    foreach (var AccoPics in Model.Pictures)
                    {
                        <div onclick="Remove(this)" class="d-flex justify-content-center align-content-center m-1 w-25">
                            <img src="@(string.Concat(urlDefault,AccoPics.URL))" title="Click To Remove" class="img-thumbnail">
                            <div class="position-absolute align-self-center overlay">
                                <span class="text font-weight-bold">X</span>
                            </div>
                        </div>
                    }
                }

            </div>
        </form>
        
        <div class="alert d-none" role="alert" id="DivMessage">

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-share fa-1x mr-1"></i>Close</button>
        <button type="button" class="btn btn-primary" id="btnSave"><i class="fas fa-save fa-1x mr-1"></i>Save changes</button>
    </div>

}
<script>
   
    $("#btnSave").click(function () {
        var imgUrls = [];
        $("#ImgContainer img").each(function () {
            imgUrls.push($(this).attr('src'));
        });
        $("input[name='imgUrls']").val(imgUrls);
        const DivMessage = $("#DivMessage");
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Action","Accommodations")',
            data: $("#formAction").serialize(),
            dataType:'json'
        }).done(function (response) {
                 DivMessage
                .removeClass('d-none')
                .html(response.Message)
                .addClass(response.Class);
            $(":input").val('');
            $("#ImgContainer div").each(function () {
                $(this).remove();
            });
            
           //to refresh _listing partialView Data, declared in index view
            refreshTableListing();
            if (response.Edited) {
                setTimeout(function () {
                    $('#exampleModalCenter').modal('hide');
                }, 1000);

            }

            setTimeout(function () {
                DivMessage.addClass('d-none');
            }, 5000);

            });
    });
    var imgEmpty = $("#ImgContainer div:first-child");
    $("#inputGroupFile01").change(function () {
        var files = this.files;
        var picData = new FormData();
        for (var i = 0; i < files.length; i++) {
            var pic = files[i];
            picData.append("picture", pic);
        }
        $.ajax({
            url: '@Url.Action("UpLoadPictures","Dashboard")',
            type:'POST',
            data: picData,
            dataType: 'json',
            contentType: false,
            processData: false
        }).done(function (response) {
            var ImgCarer = $("#ImgContainer");
            if (response.success) {
                for (var i = 0; i < response.ImgURL.length; i++) {
                    var $imgclone = imgEmpty.clone();
                    $imgclone.addClass('d-flex').removeClass('d-none').children('img').attr({ "src": response.ImgURL[i], "value": response.ImgURL[i] });
                   ImgCarer.append($imgclone);
                }
                imgEmpty.remove();
            }
            else {
                console.log("Fail:"+response.message);
            }
        }).fail(function (response, status, xhttpR) {
            console.log(xhttpR.status);
            console.log(status);
        });
    });
    function Remove(element) {
       element.remove();
     }
      
</script>


