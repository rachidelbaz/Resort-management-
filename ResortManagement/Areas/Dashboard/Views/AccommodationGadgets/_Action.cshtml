@model ResortManagement.Areas.Dashboard.Models.AccommodationGadgetsEditViewModel
@{
    var UrlDefault = "/Content/images/Webpictures/";
}
@if (Model != null)
{

    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalCenterTitle">
            @if (Model.accommodationGadgets != null)
            {
                <span>Edit Accommodation Gadget</span>
            }
            else
            {
                <span>Create Accommodation Gadget</span>
            }

        </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <form id="formAction">
            <input type="hidden" name="ID" value="@(Model.accommodationGadgets!=null?Model.accommodationGadgets.ID.ToString():string.Empty)">
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Accommodation Type</span>
                </div>
                <select name="AccommodationTypeID" class="form-control font-weight-bold pr-3">
                    @if (Model.accommodationTypes != null)
                    {

                        foreach (var accommodationType in Model.accommodationTypes)
                        {
                            <option value="@accommodationType.ID" @(Model.accommodationGadgets != null ? Model.accommodationGadgets.AccommodationTypeID == accommodationType.ID ? "class='font-weight-bold' " + "selected" : string.Empty : string.Empty)>@accommodationType.Type</option>

                        }
                    }
                </select>
            </div>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Gadget Name</span>
                </div>
                <input class="form-control" name="Name" type="text" placeholder="" value="@(Model.accommodationGadgets!=null?Model.accommodationGadgets.Name:string.Empty)">
            </div>

            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Number of Rooms</span>
                </div>
                <input class="form-control" name="NOfRoom" type="number" min="1" max="5" placeholder="" value="@(Model.accommodationGadgets!=null?Model.accommodationGadgets.NOfRoom.ToString():string.Empty)">
            </div>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Fee Per Night</span>
                </div>
                <input class="form-control" name="FeePerNight" type="number" min="0" placeholder="" value="@(Model.accommodationGadgets!=null?Model.accommodationGadgets.FeePerNight.ToString():string.Empty)">
            </div>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text">Upload</span>
                </div>
                <div class="custom-file">
                    <input type="file" accept="image/*" class="custom-file-input" id="inputGroupFile01" multiple>
                    <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                </div>
            </div>
            <input type="hidden" name="imgUrls" value="" />
            <div id="ImgContainer" class="d-flex flex-wrap justify-content-around">
                <!--Clone-->
                <div onclick="Remove(this)" class="d-none justify-content-center align-content-center m-1 w-25">
                    <img src="" title="Click To Delete" class="img-thumbnail" />
                    <div class="position-absolute align-self-center overlay">
                        <span class="text">X</span>
                    </div>
                </div>
                <!--End Clone-->
                @if (Model.accommodationGadgets != null && Model.pictures!=null)
                {
                    foreach (var item in Model.pictures)
                    {
                        <div onclick="Remove(this)" class="d-flex justify-content-center align-content-center m-1 w-25">
                            <img src="@(string.Concat(UrlDefault,item.URL))" title="Click To Delete" class="img-thumbnail" />
                            <div class="position-absolute align-self-center overlay">
                                <span class="text">X</span>
                            </div>
                        </div>
                    }
                }
            </div>
        </form>
        <div class="alert d-none" role="alert" id="DivMessage">

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-share fa-1x mr-1"></i>Close</button>
        <button type="button" class="btn btn-primary" id="btnSave"><i class="fas fa-save fa-1x mr-1"></i>Save changes</button>
    </div>

}
<script>

    $("#btnSave").click(function () {
        const DivMessage = $("#DivMessage");
        var imgUrls = [];
        $("#ImgContainer img").each(function () {
            if ($(this).attr('src') != "") {
                imgUrls.push($(this).attr('src'));
            }
        });
        $("input[name='imgUrls']").val(imgUrls);
        $.ajax({
            type: 'POST',
            url:'@Url.Action("Action","AccommodationGadgets")',
            data: $("#formAction").serialize(),
            dataType:'json'
        }).done(function (response) {
            
                 DivMessage
                .removeClass('d-none')
                .html(response.Message)
                .addClass(response.Class);    
           //to refresh _listing partialView Data declared in index view
            refreshTableListing();
            if (response.Edited && response.Success) {
                setTimeout(function () {
                    $('#exampleModalCenter').modal('hide');
                }, 1000);
            } else if (!response.Edited && response.Success) {
                $(":input").val('');
                ImgContainer.find('div').remove();
            }
            setTimeout(function () {
                DivMessage.addClass('d-none');
            }, 5000);

            });
    });
    var ImgContainer = $("#ImgContainer");
    var divClone = $("#ImgContainer div:first");
    $("#inputGroupFile01").change(function () {
        var files = this.files;
        var picData = new FormData();
        for (var i = 0; i < files.length; i++) {
            picData.append("picture", files[i]);
        }
        $.ajax({
            url: '@Url.Action("UpLoadPictures","Dashboard")',
            method: 'POST',
            data: picData,
            contentType: false,
            processData: false
        }).done(function (response) {
            
            if (response.success) {
                for (var i = 0; i < response.ImgURL.length; i++) {
                    var div = divClone.clone();
                    div.addClass('d-flex').removeClass('d-none');
                    div.children('img').attr("src", response.ImgURL[i]);
                    ImgContainer.append(div);
                }
            }
            divClone.remove();
        });

    });
    function Remove(element) {    
        var src = $(element).find('img').attr('src');
        if (src!="") {
            $.ajax({
                url: '@Url.Action("DeletePic","Dashboard")',
                method: 'POST',
                data: { imgName:src},
                dataType: 'json'
            }).done(function (response) {
                if (response.seccuss) {
                    $(element).remove();
                }
            });

        }
    }

</script>

